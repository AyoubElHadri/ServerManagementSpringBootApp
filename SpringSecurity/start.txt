Secure your application:
 - users roles and authorities
 - permission based authentication
 - CSRF
 - form based authentication
 - database authentication
 - jwt

1. create project with spring initialzr
2. dependencies: Spring web - (when you test Api ) add Spring security (when you add 6 "ApplicationUserPermission") add googleguava
3. create an Api to retrieve students (StudentController)
	- create class student
	- create a private static final list of students in StudentController class
	- create getStudent method returning stream (
			students.stream()
			.filter(student -> studentId.equals(student.getstudentId))).findfirst().orelsthrowIlllegalexception
4. create an applicationsecurityConfig in a package security
	- http authorizeRequest (create whitelist) antmatcher(indexcssjs) permitall anyrequest athenticationand httpbasic
5. override a method userDetails User from spring userBuild(user password role )
	return new InmemoryUser
5. add file in security package called passwordconfig
	- method Password encoder return bcrypt with strenght of 10
	- inject the passwordEncoder in securityconfig class and switch the hard code for password to encoder..

6. add Enums in security package called ApplicationUserPermission - ApplicationUserRoles
	- ApplicationUserPermission : 
		- STUDENT_READ("student:read"), write, course,
		- define an attribute string permission with constructor and getter
	- ApplicationUserRoles:
		- STUDENT(it should be the setsof the permission enum  ), ADMIN(same here),
		- use set collection permission and add its constructor

	
